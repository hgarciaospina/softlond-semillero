1. AnÃ¡lisis de Paradigmas: Describe con tus palabras la diferencia
   entre un enfoque imperativo y uno declarativo para calcular el
   salario promedio de los empleados del Ã¡rea de "TI".

   AnÃ¡lisis de Paradigmas
   ðŸ”¹ Enfoque imperativo

   En el paradigma imperativo, el programador indica paso a paso cÃ³mo se deben realizar las operaciones para obtener el resultado.
   El Ã©nfasis estÃ¡ en el cÃ³mo lograr el objetivo.

   Por ejemplo, para calcular el salario promedio de los empleados del Ã¡rea de "TI", en un enfoque imperativo (como en Java tradicional) se escribirÃ­a algo asÃ­:

   double suma = 0;
   int contador = 0;
   for (Empleado e : empleados) {
       if (e.getArea().equals("TI")) {
           suma += e.getSalario();
           contador++;
       }
   }
   double promedio = contador > 0 ? suma / contador : 0;


   ðŸ‘‰ AquÃ­ se detalla cÃ³mo recorrer la lista, cÃ³mo acumular los salarios, y cÃ³mo dividir al final.
   El control del flujo (bucles, condiciones, acumuladores) lo maneja el programador.

   ðŸ”¹ Enfoque declarativo

   En el paradigma declarativo, el programador indica quÃ© desea obtener, no cÃ³mo se debe hacer.
   El Ã©nfasis estÃ¡ en el quÃ© se quiere lograr, dejando que el lenguaje o motor de ejecuciÃ³n gestione los pasos internos.

   Por ejemplo:

   double promedio = empleados.stream()
       .filter(e -> e.getArea().equals("TI"))
       .mapToDouble(Empleado::getSalario)
       .average()
       .orElse(0);

